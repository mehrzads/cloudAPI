// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: clblasargs.proto

#ifndef PROTOBUF_clblasargs_2eproto__INCLUDED
#define PROTOBUF_clblasargs_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace clblasargs {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_clblasargs_2eproto();
void protobuf_AssignDesc_clblasargs_2eproto();
void protobuf_ShutdownFile_clblasargs_2eproto();

class DGEMMMessage;

// ===================================================================

class DGEMMMessage : public ::google::protobuf::Message {
 public:
  DGEMMMessage();
  virtual ~DGEMMMessage();

  DGEMMMessage(const DGEMMMessage& from);

  inline DGEMMMessage& operator=(const DGEMMMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DGEMMMessage& default_instance();

  void Swap(DGEMMMessage* other);

  // implements Message ----------------------------------------------

  inline DGEMMMessage* New() const { return New(NULL); }

  DGEMMMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DGEMMMessage& from);
  void MergeFrom(const DGEMMMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DGEMMMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 order = 1;
  bool has_order() const;
  void clear_order();
  static const int kOrderFieldNumber = 1;
  ::google::protobuf::int32 order() const;
  void set_order(::google::protobuf::int32 value);

  // required int32 transA = 2;
  bool has_transa() const;
  void clear_transa();
  static const int kTransAFieldNumber = 2;
  ::google::protobuf::int32 transa() const;
  void set_transa(::google::protobuf::int32 value);

  // required int32 transB = 3;
  bool has_transb() const;
  void clear_transb();
  static const int kTransBFieldNumber = 3;
  ::google::protobuf::int32 transb() const;
  void set_transb(::google::protobuf::int32 value);

  // required int32 M = 4;
  bool has_m() const;
  void clear_m();
  static const int kMFieldNumber = 4;
  ::google::protobuf::int32 m() const;
  void set_m(::google::protobuf::int32 value);

  // required int32 N = 5;
  bool has_n() const;
  void clear_n();
  static const int kNFieldNumber = 5;
  ::google::protobuf::int32 n() const;
  void set_n(::google::protobuf::int32 value);

  // required int32 K = 6;
  bool has_k() const;
  void clear_k();
  static const int kKFieldNumber = 6;
  ::google::protobuf::int32 k() const;
  void set_k(::google::protobuf::int32 value);

  // required double alpha = 7;
  bool has_alpha() const;
  void clear_alpha();
  static const int kAlphaFieldNumber = 7;
  double alpha() const;
  void set_alpha(double value);

  // required int64 A = 8;
  bool has_a() const;
  void clear_a();
  static const int kAFieldNumber = 8;
  ::google::protobuf::int64 a() const;
  void set_a(::google::protobuf::int64 value);

  // required int32 lda = 9;
  bool has_lda() const;
  void clear_lda();
  static const int kLdaFieldNumber = 9;
  ::google::protobuf::int32 lda() const;
  void set_lda(::google::protobuf::int32 value);

  // required int64 B = 10;
  bool has_b() const;
  void clear_b();
  static const int kBFieldNumber = 10;
  ::google::protobuf::int64 b() const;
  void set_b(::google::protobuf::int64 value);

  // required int32 ldb = 11;
  bool has_ldb() const;
  void clear_ldb();
  static const int kLdbFieldNumber = 11;
  ::google::protobuf::int32 ldb() const;
  void set_ldb(::google::protobuf::int32 value);

  // required double beta = 12;
  bool has_beta() const;
  void clear_beta();
  static const int kBetaFieldNumber = 12;
  double beta() const;
  void set_beta(double value);

  // required int64 C = 13;
  bool has_c() const;
  void clear_c();
  static const int kCFieldNumber = 13;
  ::google::protobuf::int64 c() const;
  void set_c(::google::protobuf::int64 value);

  // required int32 ldc = 14;
  bool has_ldc() const;
  void clear_ldc();
  static const int kLdcFieldNumber = 14;
  ::google::protobuf::int32 ldc() const;
  void set_ldc(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:clblasargs.DGEMMMessage)
 private:
  inline void set_has_order();
  inline void clear_has_order();
  inline void set_has_transa();
  inline void clear_has_transa();
  inline void set_has_transb();
  inline void clear_has_transb();
  inline void set_has_m();
  inline void clear_has_m();
  inline void set_has_n();
  inline void clear_has_n();
  inline void set_has_k();
  inline void clear_has_k();
  inline void set_has_alpha();
  inline void clear_has_alpha();
  inline void set_has_a();
  inline void clear_has_a();
  inline void set_has_lda();
  inline void clear_has_lda();
  inline void set_has_b();
  inline void clear_has_b();
  inline void set_has_ldb();
  inline void clear_has_ldb();
  inline void set_has_beta();
  inline void clear_has_beta();
  inline void set_has_c();
  inline void clear_has_c();
  inline void set_has_ldc();
  inline void clear_has_ldc();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 order_;
  ::google::protobuf::int32 transa_;
  ::google::protobuf::int32 transb_;
  ::google::protobuf::int32 m_;
  ::google::protobuf::int32 n_;
  ::google::protobuf::int32 k_;
  double alpha_;
  ::google::protobuf::int64 a_;
  ::google::protobuf::int64 b_;
  ::google::protobuf::int32 lda_;
  ::google::protobuf::int32 ldb_;
  double beta_;
  ::google::protobuf::int64 c_;
  ::google::protobuf::int32 ldc_;
  friend void  protobuf_AddDesc_clblasargs_2eproto();
  friend void protobuf_AssignDesc_clblasargs_2eproto();
  friend void protobuf_ShutdownFile_clblasargs_2eproto();

  void InitAsDefaultInstance();
  static DGEMMMessage* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// DGEMMMessage

// required int32 order = 1;
inline bool DGEMMMessage::has_order() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DGEMMMessage::set_has_order() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DGEMMMessage::clear_has_order() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DGEMMMessage::clear_order() {
  order_ = 0;
  clear_has_order();
}
inline ::google::protobuf::int32 DGEMMMessage::order() const {
  // @@protoc_insertion_point(field_get:clblasargs.DGEMMMessage.order)
  return order_;
}
inline void DGEMMMessage::set_order(::google::protobuf::int32 value) {
  set_has_order();
  order_ = value;
  // @@protoc_insertion_point(field_set:clblasargs.DGEMMMessage.order)
}

// required int32 transA = 2;
inline bool DGEMMMessage::has_transa() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DGEMMMessage::set_has_transa() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DGEMMMessage::clear_has_transa() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DGEMMMessage::clear_transa() {
  transa_ = 0;
  clear_has_transa();
}
inline ::google::protobuf::int32 DGEMMMessage::transa() const {
  // @@protoc_insertion_point(field_get:clblasargs.DGEMMMessage.transA)
  return transa_;
}
inline void DGEMMMessage::set_transa(::google::protobuf::int32 value) {
  set_has_transa();
  transa_ = value;
  // @@protoc_insertion_point(field_set:clblasargs.DGEMMMessage.transA)
}

// required int32 transB = 3;
inline bool DGEMMMessage::has_transb() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DGEMMMessage::set_has_transb() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DGEMMMessage::clear_has_transb() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DGEMMMessage::clear_transb() {
  transb_ = 0;
  clear_has_transb();
}
inline ::google::protobuf::int32 DGEMMMessage::transb() const {
  // @@protoc_insertion_point(field_get:clblasargs.DGEMMMessage.transB)
  return transb_;
}
inline void DGEMMMessage::set_transb(::google::protobuf::int32 value) {
  set_has_transb();
  transb_ = value;
  // @@protoc_insertion_point(field_set:clblasargs.DGEMMMessage.transB)
}

// required int32 M = 4;
inline bool DGEMMMessage::has_m() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DGEMMMessage::set_has_m() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DGEMMMessage::clear_has_m() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DGEMMMessage::clear_m() {
  m_ = 0;
  clear_has_m();
}
inline ::google::protobuf::int32 DGEMMMessage::m() const {
  // @@protoc_insertion_point(field_get:clblasargs.DGEMMMessage.M)
  return m_;
}
inline void DGEMMMessage::set_m(::google::protobuf::int32 value) {
  set_has_m();
  m_ = value;
  // @@protoc_insertion_point(field_set:clblasargs.DGEMMMessage.M)
}

// required int32 N = 5;
inline bool DGEMMMessage::has_n() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DGEMMMessage::set_has_n() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DGEMMMessage::clear_has_n() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DGEMMMessage::clear_n() {
  n_ = 0;
  clear_has_n();
}
inline ::google::protobuf::int32 DGEMMMessage::n() const {
  // @@protoc_insertion_point(field_get:clblasargs.DGEMMMessage.N)
  return n_;
}
inline void DGEMMMessage::set_n(::google::protobuf::int32 value) {
  set_has_n();
  n_ = value;
  // @@protoc_insertion_point(field_set:clblasargs.DGEMMMessage.N)
}

// required int32 K = 6;
inline bool DGEMMMessage::has_k() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DGEMMMessage::set_has_k() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DGEMMMessage::clear_has_k() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DGEMMMessage::clear_k() {
  k_ = 0;
  clear_has_k();
}
inline ::google::protobuf::int32 DGEMMMessage::k() const {
  // @@protoc_insertion_point(field_get:clblasargs.DGEMMMessage.K)
  return k_;
}
inline void DGEMMMessage::set_k(::google::protobuf::int32 value) {
  set_has_k();
  k_ = value;
  // @@protoc_insertion_point(field_set:clblasargs.DGEMMMessage.K)
}

// required double alpha = 7;
inline bool DGEMMMessage::has_alpha() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DGEMMMessage::set_has_alpha() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DGEMMMessage::clear_has_alpha() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DGEMMMessage::clear_alpha() {
  alpha_ = 0;
  clear_has_alpha();
}
inline double DGEMMMessage::alpha() const {
  // @@protoc_insertion_point(field_get:clblasargs.DGEMMMessage.alpha)
  return alpha_;
}
inline void DGEMMMessage::set_alpha(double value) {
  set_has_alpha();
  alpha_ = value;
  // @@protoc_insertion_point(field_set:clblasargs.DGEMMMessage.alpha)
}

// required int64 A = 8;
inline bool DGEMMMessage::has_a() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DGEMMMessage::set_has_a() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DGEMMMessage::clear_has_a() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DGEMMMessage::clear_a() {
  a_ = GOOGLE_LONGLONG(0);
  clear_has_a();
}
inline ::google::protobuf::int64 DGEMMMessage::a() const {
  // @@protoc_insertion_point(field_get:clblasargs.DGEMMMessage.A)
  return a_;
}
inline void DGEMMMessage::set_a(::google::protobuf::int64 value) {
  set_has_a();
  a_ = value;
  // @@protoc_insertion_point(field_set:clblasargs.DGEMMMessage.A)
}

// required int32 lda = 9;
inline bool DGEMMMessage::has_lda() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void DGEMMMessage::set_has_lda() {
  _has_bits_[0] |= 0x00000100u;
}
inline void DGEMMMessage::clear_has_lda() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void DGEMMMessage::clear_lda() {
  lda_ = 0;
  clear_has_lda();
}
inline ::google::protobuf::int32 DGEMMMessage::lda() const {
  // @@protoc_insertion_point(field_get:clblasargs.DGEMMMessage.lda)
  return lda_;
}
inline void DGEMMMessage::set_lda(::google::protobuf::int32 value) {
  set_has_lda();
  lda_ = value;
  // @@protoc_insertion_point(field_set:clblasargs.DGEMMMessage.lda)
}

// required int64 B = 10;
inline bool DGEMMMessage::has_b() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void DGEMMMessage::set_has_b() {
  _has_bits_[0] |= 0x00000200u;
}
inline void DGEMMMessage::clear_has_b() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void DGEMMMessage::clear_b() {
  b_ = GOOGLE_LONGLONG(0);
  clear_has_b();
}
inline ::google::protobuf::int64 DGEMMMessage::b() const {
  // @@protoc_insertion_point(field_get:clblasargs.DGEMMMessage.B)
  return b_;
}
inline void DGEMMMessage::set_b(::google::protobuf::int64 value) {
  set_has_b();
  b_ = value;
  // @@protoc_insertion_point(field_set:clblasargs.DGEMMMessage.B)
}

// required int32 ldb = 11;
inline bool DGEMMMessage::has_ldb() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void DGEMMMessage::set_has_ldb() {
  _has_bits_[0] |= 0x00000400u;
}
inline void DGEMMMessage::clear_has_ldb() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void DGEMMMessage::clear_ldb() {
  ldb_ = 0;
  clear_has_ldb();
}
inline ::google::protobuf::int32 DGEMMMessage::ldb() const {
  // @@protoc_insertion_point(field_get:clblasargs.DGEMMMessage.ldb)
  return ldb_;
}
inline void DGEMMMessage::set_ldb(::google::protobuf::int32 value) {
  set_has_ldb();
  ldb_ = value;
  // @@protoc_insertion_point(field_set:clblasargs.DGEMMMessage.ldb)
}

// required double beta = 12;
inline bool DGEMMMessage::has_beta() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void DGEMMMessage::set_has_beta() {
  _has_bits_[0] |= 0x00000800u;
}
inline void DGEMMMessage::clear_has_beta() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void DGEMMMessage::clear_beta() {
  beta_ = 0;
  clear_has_beta();
}
inline double DGEMMMessage::beta() const {
  // @@protoc_insertion_point(field_get:clblasargs.DGEMMMessage.beta)
  return beta_;
}
inline void DGEMMMessage::set_beta(double value) {
  set_has_beta();
  beta_ = value;
  // @@protoc_insertion_point(field_set:clblasargs.DGEMMMessage.beta)
}

// required int64 C = 13;
inline bool DGEMMMessage::has_c() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void DGEMMMessage::set_has_c() {
  _has_bits_[0] |= 0x00001000u;
}
inline void DGEMMMessage::clear_has_c() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void DGEMMMessage::clear_c() {
  c_ = GOOGLE_LONGLONG(0);
  clear_has_c();
}
inline ::google::protobuf::int64 DGEMMMessage::c() const {
  // @@protoc_insertion_point(field_get:clblasargs.DGEMMMessage.C)
  return c_;
}
inline void DGEMMMessage::set_c(::google::protobuf::int64 value) {
  set_has_c();
  c_ = value;
  // @@protoc_insertion_point(field_set:clblasargs.DGEMMMessage.C)
}

// required int32 ldc = 14;
inline bool DGEMMMessage::has_ldc() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void DGEMMMessage::set_has_ldc() {
  _has_bits_[0] |= 0x00002000u;
}
inline void DGEMMMessage::clear_has_ldc() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void DGEMMMessage::clear_ldc() {
  ldc_ = 0;
  clear_has_ldc();
}
inline ::google::protobuf::int32 DGEMMMessage::ldc() const {
  // @@protoc_insertion_point(field_get:clblasargs.DGEMMMessage.ldc)
  return ldc_;
}
inline void DGEMMMessage::set_ldc(::google::protobuf::int32 value) {
  set_has_ldc();
  ldc_ = value;
  // @@protoc_insertion_point(field_set:clblasargs.DGEMMMessage.ldc)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace clblasargs

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_clblasargs_2eproto__INCLUDED
