// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cloudmessage.proto

#ifndef PROTOBUF_cloudmessage_2eproto__INCLUDED
#define PROTOBUF_cloudmessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace cloudmessaging {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_cloudmessage_2eproto();
void protobuf_AssignDesc_cloudmessage_2eproto();
void protobuf_ShutdownFile_cloudmessage_2eproto();

class commonMessage;
class allocMessage;

// ===================================================================

class commonMessage : public ::google::protobuf::Message {
 public:
  commonMessage();
  virtual ~commonMessage();

  commonMessage(const commonMessage& from);

  inline commonMessage& operator=(const commonMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const commonMessage& default_instance();

  void Swap(commonMessage* other);

  // implements Message ----------------------------------------------

  inline commonMessage* New() const { return New(NULL); }

  commonMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const commonMessage& from);
  void MergeFrom(const commonMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(commonMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 messageType = 1;
  inline bool has_messagetype() const;
  inline void clear_messagetype();
  static const int kMessageTypeFieldNumber = 1;
  inline ::google::protobuf::int32 messagetype() const;
  inline void set_messagetype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:cloudmessaging.commonMessage)
 private:
  inline void set_has_messagetype();
  inline void clear_has_messagetype();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 messagetype_;
  friend void  protobuf_AddDesc_cloudmessage_2eproto();
  friend void protobuf_AssignDesc_cloudmessage_2eproto();
  friend void protobuf_ShutdownFile_cloudmessage_2eproto();

  void InitAsDefaultInstance();
  static commonMessage* default_instance_;
};
// -------------------------------------------------------------------

class allocMessage : public ::google::protobuf::Message {
 public:
  allocMessage();
  virtual ~allocMessage();

  allocMessage(const allocMessage& from);

  inline allocMessage& operator=(const allocMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const allocMessage& default_instance();

  void Swap(allocMessage* other);

  // implements Message ----------------------------------------------

  inline allocMessage* New() const { return New(NULL); }

  allocMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const allocMessage& from);
  void MergeFrom(const allocMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(allocMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 messageType = 1 [default = 0];
  inline bool has_messagetype() const;
  inline void clear_messagetype();
  static const int kMessageTypeFieldNumber = 1;
  inline ::google::protobuf::int32 messagetype() const;
  inline void set_messagetype(::google::protobuf::int32 value);

  // required int32 size = 2;
  inline bool has_size() const;
  inline void clear_size();
  static const int kSizeFieldNumber = 2;
  inline ::google::protobuf::int32 size() const;
  inline void set_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:cloudmessaging.allocMessage)
 private:
  inline void set_has_messagetype();
  inline void clear_has_messagetype();
  inline void set_has_size();
  inline void clear_has_size();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 messagetype_;
  ::google::protobuf::int32 size_;
  friend void  protobuf_AddDesc_cloudmessage_2eproto();
  friend void protobuf_AssignDesc_cloudmessage_2eproto();
  friend void protobuf_ShutdownFile_cloudmessage_2eproto();

  void InitAsDefaultInstance();
  static allocMessage* default_instance_;
};
// ===================================================================


// ===================================================================

// commonMessage

// required int32 messageType = 1;
inline bool commonMessage::has_messagetype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void commonMessage::set_has_messagetype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void commonMessage::clear_has_messagetype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void commonMessage::clear_messagetype() {
  messagetype_ = 0;
  clear_has_messagetype();
}
inline ::google::protobuf::int32 commonMessage::messagetype() const {
  // @@protoc_insertion_point(field_get:cloudmessaging.commonMessage.messageType)
  return messagetype_;
}
inline void commonMessage::set_messagetype(::google::protobuf::int32 value) {
  set_has_messagetype();
  messagetype_ = value;
  // @@protoc_insertion_point(field_set:cloudmessaging.commonMessage.messageType)
}

// -------------------------------------------------------------------

// allocMessage

// required int32 messageType = 1 [default = 0];
inline bool allocMessage::has_messagetype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void allocMessage::set_has_messagetype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void allocMessage::clear_has_messagetype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void allocMessage::clear_messagetype() {
  messagetype_ = 0;
  clear_has_messagetype();
}
inline ::google::protobuf::int32 allocMessage::messagetype() const {
  // @@protoc_insertion_point(field_get:cloudmessaging.allocMessage.messageType)
  return messagetype_;
}
inline void allocMessage::set_messagetype(::google::protobuf::int32 value) {
  set_has_messagetype();
  messagetype_ = value;
  // @@protoc_insertion_point(field_set:cloudmessaging.allocMessage.messageType)
}

// required int32 size = 2;
inline bool allocMessage::has_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void allocMessage::set_has_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void allocMessage::clear_has_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void allocMessage::clear_size() {
  size_ = 0;
  clear_has_size();
}
inline ::google::protobuf::int32 allocMessage::size() const {
  // @@protoc_insertion_point(field_get:cloudmessaging.allocMessage.size)
  return size_;
}
inline void allocMessage::set_size(::google::protobuf::int32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:cloudmessaging.allocMessage.size)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace cloudmessaging

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cloudmessage_2eproto__INCLUDED
